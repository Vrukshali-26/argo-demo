name: Build and Deploy to AKS

on: push

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: $CLIENT_ENVIRONMENT
    env:
      AWS_ACCESS_KEY: AKIASCEPZTFMGUH2KCZD
      CLIENT_ACCOUNT_ID: moulacloud-ause-prod
      K8S_CLUSTER: devops-ause-prod
      CLOUD_LOCATION_1: Australia Southeast
      DEPLOYMENT_NAME: moulacloud
      HELM_VERSION: 3.7.1
      HELM_SECRETS_VERSION: 3.11.0
      HELMFILE_VERSION: 0.142.0
      KUBECTL_VERSION: 1.22.4
      CLIENT_ENVIRONMENT: demo
      CLIENT_DOMAIN_URL: bradmccoy.io
      CLIENT_CODE: mc
      CLOUD_PROVIDER: azure
      ARGOCD_CLI_VERSION: v2.1.7
      ARGO_DESTINATION_CLUSTER_SERVER: https://argocd.bradmccoy.io

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # - name: Azure Login
    #   uses: azure/login@v1
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # - name: Azure CLI script
    #   uses: azure/CLI@v1
    #   with:
    #     azcliversion: 2.0.72
    #     inlineScript: |
    #       az aks get-credentials --resource-group devops-prod --name ${K8S_CLUSTER}

    # Set the target Azure Kubernetes Service (AKS) cluster. 
    - uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.K8S_CLUSTER }}
        resource-group: devops-prod

    # Install Helm3
    - name: Install Helm3
      uses: azure/setup-helm@v1
      with:
        version: v3.6.1

    # Set up Helm3
    - name: Set up Helm3
      run: |-
        helm repo add incubator https://charts.helm.sh/incubator
        helm repo add stable https://charts.helm.sh/stable
        helm plugin install https://github.com/jkroepke/helm-secrets --version ${HELM_SECRETS_VERSION}        

    # Set up Helmfile
    - name: Set up Helmfile
      run: |-
        curl -sfLo helmfile https://github.com/roboll/helmfile/releases/download/v${HELMFILE_VERSION}/helmfile_linux_amd64
        chmod a+x ./helmfile
        
    # Set up Kubectl
    - name: Set up Kubectl
      run: |-
        curl -sfLo kubectl "https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
        chmod a+x ./kubectl               

    # - name: Deploy
    #   run: |-
    #     find "resources/" -name "*.tmpl" -exec bash -c 'envsubst < $1 > ${1%.tmpl}' _ {} \;
    #     kubectl apply -f resources/before
    #     find "helmfile.d/" -name "*.tmpl" -exec bash -c 'envsubst < $1 > ${1%.tmpl}' _ {} \;
    #     ls -lrt
    #     ./helmfile --environment $CLIENT_ENVIRONMENT sync 
    #     ls resources/after/sealed-secrets/production
    #     kubectl apply -f resources/after/sealed-secrets/production
    #     kubectl apply -f resources/after/argocd/production
    #     kubectl apply -f resources/after/keptn/production
    #     kubectl apply -f resources/after

    - name: Set up argocd CLI
      run: |-
        curl -sfLo argocd "https://github.com/argoproj/argo-cd/releases/download/$ARGOCD_CLI_VERSION/argocd-linux-amd64"
        chmod a+x argocd 
        ./argocd login argocd.bradmccoy.io --username admin --password $( kubectl get secrets argocd-initial-admin-secret -o json -n ci-cd | jq -r '(.data.password)' | base64 --decode )
        ./argocd cluster add $( kubectl config view -o json | jq -r '(.clusters[].name)' ) --name kcd-guatemala-demo 

